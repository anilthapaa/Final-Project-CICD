name: CI/CD Pipeline-Test, Build, and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Create .env from secret
        run: echo "REACT_APP_OPEN_WEATHER_API_KEY=${{ secrets.REACT_APP_OPEN_WEATHER_API_KEY }}" > .env

      - name: Build React app
        run:  npm run build
        env:
          REACT_APP_OPEN_WEATHER_API_KEY: ${{ secrets.REACT_APP_OPEN_WEATHER_API_KEY }}

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  build-and-push-image:
    name: Build & Push Docker Image
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/react-nginx-app:latest .
          docker push ghcr.io/${{ github.repository_owner }}/react-nginx-app:latest

  deploy:
    name: Deploy to AWS VM
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible
          
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/key.pem
          chmod 400 ~/.ssh/key.pem
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          
      - name: Run Ansible playbook
        run: |
          cd ansible
          ansible-playbook -i inventory.yml playbook.yml \
            --extra-vars "docker_image=ghcr.io/${{ github.repository_owner }}/react-nginx-app:latest ssh_pub_key_content='${{ secrets.SSH_PUB_KEY }}'" \
            -e "ansible_host=${{ secrets.HOST }}" \